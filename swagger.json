{
  "swagger": "2.0",
  "info": {
    "description": "Ini adalah challenge-chapter-8",
    "version": "1.0.0",
    "title": "GameApp"
  },
  "host": "localhost:4000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Player",
      "description": "Operations about player"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/players": {
      "post": {
        "tags": [
          "Player"
        ],
        "summary": "Create player",
        "description": "This can only be done by the logged in player.",
        "operationId": "createPlayer",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created player object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "username or email cannot empty"
          },
          "default": {
            "description": "success"
          }
        }
      }
    },
    "/players/exp/id": {
      "post": {
        "tags": [
          "Player"
        ],
        "summary": "Update experience of players with given input array",
        "description": "",
        "operationId": "updateExperience",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "id",
            "description": "experience of player object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Player"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "success"
          }
        }
      }
    },
    "/players/{id}": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "Get player by id",
        "description": "",
        "operationId": "getPlayerById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be fetched. Use id for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "404": {
            "description": "Player with {id} not found"
          }
        }
      },
      "put": {
        "tags": [
          "Player"
        ],
        "summary": "Updated player",
        "description": "This can only be done by the logged in player].",
        "operationId": "updatePlayer",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated player object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "Player with id  not found"
          },
          "500": {
            "description": "Failed to update"
          }
        }
      },
      "delete": {
        "tags": [
          "Player"
        ],
        "summary": "Delete Player",
        "description": "This can only be done by the logged in player.",
        "operationId": "deletePlayer",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "Cannot delete Player with id=${id}. Maybe Player was not found!"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Player": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Player"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}